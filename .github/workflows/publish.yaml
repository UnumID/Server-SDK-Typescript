name: deployment

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  # getVersion:
  # # from https://stackoverflow.com/questions/58177786/get-the-current-pushed-tag-in-github-actions
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set env
  #       run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
  #     - name: Test
  #       run: |
  #         echo $RELEASE_VERSION
  #         echo ${{ env.RELEASE_VERSION }}

  # updatePackage:
  # #from https://github.community/t/auto-update-package-json-on-publishing/16894
  #   runs-on: ubuntu-latest
  #   # if: github.ref == 'refs/heads/master'
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: 12
  #         registry-url: https://npm.pkg.github.com/
  #         scope: '@something'
  #     - name: Setup GIT
  #       run: |
  #         git switch -c master
  #         git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
  #         git config user.name "$GITHUB_ACTOR"
  #     - name: Install and Publish
  #       run: |
  #         yarn
  #         npm --no-git-tag-version version ${{ env.RELEASE_VERSION }}
          
  #         npm publish
  #       env:
  #         NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
  #         #git add package.json && git commit -m "[Release] ${{ env.RELEASE_VERSION }}" && git push origin master

  commitUpdate:
    name: Update version & deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set version env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Test env
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      # - name: Install dependencies
      #   run: npm install

      - name: Update source code
        run: |
          npm --no-git-tag-version version ${{ env.RELEASE_VERSION }}

      - name: Create type docs
        run: |
          npm i -g typedoc
          npm i typescript
          npx typedoc src/index.ts
          
        #- npm publish

      - name: Commit changes
        uses: EndBug/add-and-commit@v7
        with:
          author_name: UnumID Admin
          author_email: admin@unum.id
          message: '[Release] ${{ env.RELEASE_VERSION }}'
          add: 'package.json'
          branch: actions

  # checks:
  #   if: github.event_name != 'push'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: '12.x'
  #     - name: Test Build
  #       run: |
  #         if [ -e yarn.lock ]; then
  #         yarn install --frozen-lockfile
  #         elif [ -e package-lock.json ]; then
  #         npm ci
  #         else
  #         npm i
  #         fi
  #         npm run build

  # gh-release:
  #   if: github.event_name != 'pull_request'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: '12.x'
  #     - uses: webfactory/ssh-agent@v0.5.0
  #       with:
  #         ssh-private-key: ${{ secrets.GH_PAGES_DEPLOY }}
  #     - name: Release to GitHub Pages
  #       env:
  #         USE_SSH: true
  #         GIT_USER: git
  #       run: |
  #         git config --global user.email "actions@github.com"
  #         git config --global user.name "gh-actions"
  #         if [ -e yarn.lock ]; then
  #         yarn install --frozen-lockfile
  #         elif [ -e package-lock.json ]; then
  #         npm ci
  #         else
  #         npm i
  #         fi
  #         npm run deploy