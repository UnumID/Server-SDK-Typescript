"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.doEncryptPb = exports.doEncrypt = void 0;
var logger_1 = __importDefault(require("../logger"));
var library_crypto_1 = require("@unumid/library-crypto");
/**
 * Encrypt the provided data object.
 * @param did
 * @param publicKeyObj
 * @param data
 */
exports.doEncrypt = function (did, publicKeyObj, data) {
    logger_1.default.debug('Performing encryption using public key', publicKeyObj);
    var result = library_crypto_1.encrypt(did + '#' + publicKeyObj.id, publicKeyObj.publicKey, data, publicKeyObj.encoding, publicKeyObj.rsaPadding);
    logger_1.default.debug("Encrypted data result: " + result.data);
    return result;
};
/**
 * Encrypt the provided data object.
 * @param did
 * @param publicKeyObj
 * @param data
 */
exports.doEncryptPb = function (did, publicKeyObj, data) {
    logger_1.default.debug('Performing byte array encryption using public key', publicKeyObj);
    var result = library_crypto_1.encryptBytes(did + '#' + publicKeyObj.id, publicKeyObj, data);
    logger_1.default.debug("Encrypted data result: " + result.data);
    return result;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5jcnlwdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9lbmNyeXB0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLHFEQUErQjtBQUMvQix5REFBK0Q7QUFFL0Q7Ozs7O0dBS0c7QUFDVSxRQUFBLFNBQVMsR0FBRyxVQUFDLEdBQVcsRUFBRSxZQUEyQixFQUFFLElBQWE7SUFDL0UsZ0JBQU0sQ0FBQyxLQUFLLENBQUMsd0NBQXdDLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFDckUsSUFBTSxNQUFNLEdBQUcsd0JBQU8sQ0FDcEIsR0FBRyxHQUFHLEdBQUcsR0FBRyxZQUFZLENBQUMsRUFBRSxFQUMzQixZQUFZLENBQUMsU0FBUyxFQUN0QixJQUFJLEVBQ0osWUFBWSxDQUFDLFFBQVEsRUFDckIsWUFBWSxDQUFDLFVBQVUsQ0FDeEIsQ0FBQztJQUVGLGdCQUFNLENBQUMsS0FBSyxDQUFDLDRCQUEwQixNQUFNLENBQUMsSUFBTSxDQUFDLENBQUM7SUFDdEQsT0FBTyxNQUFNLENBQUM7QUFDaEIsQ0FBQyxDQUFDO0FBRUY7Ozs7O0dBS0c7QUFDVSxRQUFBLFdBQVcsR0FBRyxVQUFDLEdBQVcsRUFBRSxZQUEyQixFQUFFLElBQWdCO0lBQ3BGLGdCQUFNLENBQUMsS0FBSyxDQUFDLG1EQUFtRCxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBRWhGLElBQU0sTUFBTSxHQUFHLDZCQUFZLENBQ3pCLEdBQUcsR0FBRyxHQUFHLEdBQUcsWUFBWSxDQUFDLEVBQUUsRUFDM0IsWUFBWSxFQUNaLElBQUksQ0FDTCxDQUFDO0lBRUYsZ0JBQU0sQ0FBQyxLQUFLLENBQUMsNEJBQTBCLE1BQU0sQ0FBQyxJQUFNLENBQUMsQ0FBQztJQUN0RCxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbmNyeXB0ZWREYXRhLCBKU09OT2JqLCBQdWJsaWNLZXlJbmZvIH0gZnJvbSAnQHVudW1pZC90eXBlcyc7XG5pbXBvcnQgbG9nZ2VyIGZyb20gJy4uL2xvZ2dlcic7XG5pbXBvcnQgeyBlbmNyeXB0LCBlbmNyeXB0Qnl0ZXMgfSBmcm9tICdAdW51bWlkL2xpYnJhcnktY3J5cHRvJztcblxuLyoqXG4gKiBFbmNyeXB0IHRoZSBwcm92aWRlZCBkYXRhIG9iamVjdC5cbiAqIEBwYXJhbSBkaWRcbiAqIEBwYXJhbSBwdWJsaWNLZXlPYmpcbiAqIEBwYXJhbSBkYXRhXG4gKi9cbmV4cG9ydCBjb25zdCBkb0VuY3J5cHQgPSAoZGlkOiBzdHJpbmcsIHB1YmxpY0tleU9iajogUHVibGljS2V5SW5mbywgZGF0YTogSlNPTk9iaik6IEVuY3J5cHRlZERhdGEgPT4ge1xuICBsb2dnZXIuZGVidWcoJ1BlcmZvcm1pbmcgZW5jcnlwdGlvbiB1c2luZyBwdWJsaWMga2V5JywgcHVibGljS2V5T2JqKTtcbiAgY29uc3QgcmVzdWx0ID0gZW5jcnlwdChcbiAgICBkaWQgKyAnIycgKyBwdWJsaWNLZXlPYmouaWQsXG4gICAgcHVibGljS2V5T2JqLnB1YmxpY0tleSxcbiAgICBkYXRhLFxuICAgIHB1YmxpY0tleU9iai5lbmNvZGluZyxcbiAgICBwdWJsaWNLZXlPYmoucnNhUGFkZGluZ1xuICApO1xuXG4gIGxvZ2dlci5kZWJ1ZyhgRW5jcnlwdGVkIGRhdGEgcmVzdWx0OiAke3Jlc3VsdC5kYXRhfWApO1xuICByZXR1cm4gcmVzdWx0O1xufTtcblxuLyoqXG4gKiBFbmNyeXB0IHRoZSBwcm92aWRlZCBkYXRhIG9iamVjdC5cbiAqIEBwYXJhbSBkaWRcbiAqIEBwYXJhbSBwdWJsaWNLZXlPYmpcbiAqIEBwYXJhbSBkYXRhXG4gKi9cbmV4cG9ydCBjb25zdCBkb0VuY3J5cHRQYiA9IChkaWQ6IHN0cmluZywgcHVibGljS2V5T2JqOiBQdWJsaWNLZXlJbmZvLCBkYXRhOiBVaW50OEFycmF5KTogRW5jcnlwdGVkRGF0YSA9PiB7XG4gIGxvZ2dlci5kZWJ1ZygnUGVyZm9ybWluZyBieXRlIGFycmF5IGVuY3J5cHRpb24gdXNpbmcgcHVibGljIGtleScsIHB1YmxpY0tleU9iaik7XG5cbiAgY29uc3QgcmVzdWx0ID0gZW5jcnlwdEJ5dGVzKFxuICAgIGRpZCArICcjJyArIHB1YmxpY0tleU9iai5pZCxcbiAgICBwdWJsaWNLZXlPYmosXG4gICAgZGF0YVxuICApO1xuXG4gIGxvZ2dlci5kZWJ1ZyhgRW5jcnlwdGVkIGRhdGEgcmVzdWx0OiAke3Jlc3VsdC5kYXRhfWApO1xuICByZXR1cm4gcmVzdWx0O1xufTtcbiJdfQ==